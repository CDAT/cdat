version: 2

aliases:

  - &setup_nightly
    |
      echo "Install nightly..."
      mkdir -p workspace
      git clone -b validateNightly git@github.com:UV-CDAT/uvcdat workspace/uvcdat
      python workspace/uvcdat/scripts/install_nightly.py -w $WORKDIR -p $PYTHON_VERSION
      echo "Done installing nightly"
      ls $WORKDIR/miniconda/envs

  - &setup_env
    |
      echo "Install from env file..."
      mkdir -p workspace
      git clone -b validateNightly git@github.com:UV-CDAT/uvcdat workspace/uvcdat
      python workspace/uvcdat/scripts/install_from_env.py -w $WORKDIR -v $ENV_NAME -p $PYTHON_VERSION
      echo "Done installing from env file"
      ls $WORKDIR//miniconda/envs

  - &validate_install
    |
      echo "Validate install - verify versions of installed packages"
      python workspace/uvcdat/scripts/validate_install.py -w $WORKDIR -b $BRANCH_NAME -p $PYTHON_VERSION

  - &run_cdms_test
    name: run_cdms_test
    command: |
      python $RUN_TESTSUITE -w $WORKDIR -p $PYTHON_VERSION -t 'cdms' -b $BRANCH_NAME

  - &run_genutil_test
    name: run_genutil_test
    command: | 
      python $RUN_TESTSUITE -w $WORKDIR -p $PYTHON_VERSION -t 'genutil' -b $BRANCH_NAME

  - &run_cdutil_test
    name: run_cdutil_test
    command: | 
      python $RUN_TESTSUITE -w $WORKDIR -p $PYTHON_VERSION -t 'cdutil' -b $BRANCH_NAME

  - &run_vcs_test
    name: run_vcs_test
    command: | 
      python $RUN_TESTSUITE -w $WORKDIR -p $PYTHON_VERSION -t 'vcs' -b $BRANCH_NAME

  - &run_vcsaddons_test
    name: run_vcsaddons_test
    command: | 
      python $RUN_TESTSUITE -w $WORKDIR -p $PYTHON_VERSION -t 'vcsaddons' -b $BRANCH_NAME

  - &run_pcmdi_metrics_test
    name: run_pcmdi_metrics_test
    command: | 
      python $RUN_TESTSUITE -w $WORKDIR -p $PYTHON_VERSION -t 'pcmdi_metrics' -b $BRANCH_NAME

  - &run_dv3d_test
    name: run_dv3d_test
    command: |
      python $RUN_TESTSUITE -w $WORKDIR -p $PYTHON_VERSION -t 'dv3d' -b $BRANCH_NAME

  - &run_thermo_test
    name: run_thermo_test
    command: |
      python $RUN_TESTSUITE -w $WORKDIR -p $PYTHON_VERSION -t 'thermo' -b $BRANCH_NAME

  - &run_wk_test
    name: run_wk_test
    command: |
      python $RUN_TESTSUITE -w $WORKDIR -p $PYTHON_VERSION -t 'wk' -b $BRANCH_NAME

jobs:
  macos_nightly_py2:
    macos:
      xcode: "9.0"
    environment:
      WORKDIR: "workspace/test_nightly"
      PYTHON_VERSION: "py2"
      BRANCH_NAME: "master"
      RUN_TESTSUITE: "workspace/uvcdat/scripts/run_testsuite.py"
    steps:
      - run: echo "...MacOS - test install from nightly"
      - run: uname -a
      - run: *setup_nightly
      - run: *validate_install
      - run: *run_cdms_test
      - run: *run_genutil_test
      - run: *run_cdutil_test
      - run: *run_vcs_test
      - run: *run_vcsaddons_test
      - run: *run_pcmdi_metrics_test
      - run: *run_dv3d_test
      - run: *run_thermo_test
      - run: *run_wk_test

  macos_nightly_py3:
    macos:
      xcode: "9.0"
    environment:
      WORKDIR: "workspace/test_nightly"
      PYTHON_VERSION: "py3"
      BRANCH_NAME: "master"
      RUN_TESTSUITE: "workspace/uvcdat/scripts/run_testsuite.py"
    steps:
      - run: echo "...MacOS - test install from nightly"
      - run: uname -a
      - run: *setup_nightly
      - run: *validate_install
      - run: *run_cdms_test
      - run: *run_genutil_test
      - run: *run_cdutil_test
      - run: *run_vcs_test
      - run: *run_vcsaddons_test
      - run: *run_pcmdi_metrics_test
      - run: *run_dv3d_test
      - run: *run_thermo_test
      - run: *run_wk_test

  linux_nightly_py2:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "workspace/test_nightly"
      PYTHON_VERSION: "py2"
      BRANCH_NAME: "master"
      RUN_TESTSUITE: "workspace/uvcdat/scripts/run_testsuite.py"
    steps:
      - run: echo "...Linux - test install from nightly"
      - run: uname -a
      - run: *setup_nightly
      - run: *validate_install
      - run: *run_cdms_test
      - run: *run_genutil_test
      - run: *run_cdutil_test
      - run: *run_vcs_test
      - run: *run_vcsaddons_test
      - run: *run_pcmdi_metrics_test
      - run: *run_dv3d_test
      - run: *run_thermo_test
      - run: *run_wk_test

  linux_nightly_py3:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "workspace/test_nightly"
      PYTHON_VERSION: "py3"
      BRANCH_NAME: "master"
      RUN_TESTSUITE: "workspace/uvcdat/scripts/run_testsuite.py"
    steps:
      - run: echo "...Linux - test install from nightly"
      - run: uname -a
      - run: *setup_nightly
      - run: *validate_install
      - run: *run_cdms_test
      - run: *run_genutil_test
      - run: *run_cdutil_test
      - run: *run_vcs_test
      - run: *run_vcsaddons_test
      - run: *run_pcmdi_metrics_test
      - run: *run_dv3d_test
      - run: *run_thermo_test
      - run: *run_wk_test

  macos_cdat-3.0.beta-nox_py2:
    macos:
      xcode: "9.0"
    environment:
      WORKDIR: "workspace/test_cdat-3.0.beta-nox_py2_env"
      PYTHON_VERSION: "py2"
      ENV_NAME: "cdat-3.0.beta-nox"
      RUN_TESTSUITE: "workspace/uvcdat/scripts/run_testsuite.py"
    steps:
      - run: echo "MacOS + py2 install from cdat-3.0.beta-nox_py2.Darwin.yml"
      - run: uname -a
      - run: *setup_env
      - run: *run_cdms_test
      - run: *run_genutil_test
      - run: *run_cdutil_test
      - run: *run_vcs_test
      - run: *run_vcsaddons_test
      - run: *run_pcmdi_metrics_test
      - run: *run_dv3d_test

  macos_cdat-3.0.beta2-nox_py3:
    macos:
      xcode: "9.0"
    environment:
      WORKDIR: "workspace/test_cdat-3.0.beta2-nox_py3_env"
      PYTHON_VERSION: "py3"
      ENV_NAME: "cdat-3.0.beta2-nox"
      RUN_TESTSUITE: "workspace/uvcdat/scripts/run_testsuite.py"
    steps:
      - run: echo "MacOS + py3 install from cdat-3.0.beta2-nox_py3.Darwin.yml"
      - run: uname -a
      - run: *setup_env
      - run: *run_cdms_test
      - run: *run_genutil_test
      - run: *run_cdutil_test
      - run: *run_vcs_test
      - run: *run_vcsaddons_test
      - run: *run_pcmdi_metrics_test
      - run: *run_dv3d_test

  macos_cdat-3.0.beta_py2:
    macos:
      xcode: "9.0"
    environment:
      WORKDIR: "workspace/test_cdat-3.0.beta_py2_env"
      PYTHON_VERSION: "py2"
      ENV_NAME: "cdat-3.0.beta"
      RUN_TESTSUITE: "workspace/uvcdat/scripts/run_testsuite.py"
    steps:
      - run: echo "MacOS + py2 install from cdat-3.0.beta_py2.Darwin.yml"
      - run: uname -a
      - run: *setup_env
      - run: *run_cdms_test
      - run: *run_genutil_test
      - run: *run_cdutil_test
      - run: *run_thermo_test
      - run: *run_wk_test

  macos_cdat-3.0.beta2_py3:
    macos:
      xcode: "9.0"
    environment:
      WORKDIR: "workspace/test_cdat-3.0.beta2_py3_env"
      PYTHON_VERSION: "py3"
      ENV_NAME: "cdat-3.0.beta2"
      RUN_TESTSUITE: "workspace/uvcdat/scripts/run_testsuite.py"
    steps:
      - run: echo "MacOS + py3 install from cdat-3.0.beta2_py3.Darwin.yml"
      - run: uname -a
      - run: *setup_env
      - run: *run_cdms_test
      - run: *run_genutil_test
      - run: *run_cdutil_test
      - run: *run_thermo_test
      - run: *run_wk_test

  linux_cdat-3.0.beta-nox_py2:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "workspace/test_cdat-3.0.beta-nox_py2_env"
      PYTHON_VERSION: "py2"
      ENV_NAME: "cdat-3.0.beta-nox"
      RUN_TESTSUITE: "workspace/uvcdat/scripts/run_testsuite.py"
    steps:
      - run: echo "Linux - test install from cdat-3.0.beta-nox_py2.Linux.yaml"
      - run: uname -a
      - run: *setup_env
      - run: *run_cdms_test
      - run: *run_genutil_test
      - run: *run_cdutil_test
      - run: *run_vcs_test
      - run: *run_vcsaddons_test
      - run: *run_pcmdi_metrics_test
      - run: *run_dv3d_test

  linux_cdat-3.0.beta2-nox_py3:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "workspace/test_cdat-3.0.beta2-nox_py3_env"
      PYTHON_VERSION: "py3"
      ENV_NAME: "cdat-3.0.beta2-nox"
      RUN_TESTSUITE: "workspace/uvcdat/scripts/run_testsuite.py"
    steps:
      - run: echo "Linux - test install from cdat-3.0.beta2-nox_py3.Linux.yaml"
      - run: uname -a
      - run: *setup_env
      - run: *run_cdms_test
      - run: *run_genutil_test
      - run: *run_cdutil_test
      - run: *run_vcs_test
      - run: *run_vcsaddons_test
      - run: *run_pcmdi_metrics_test
      - run: *run_dv3d_test

  linux_cdat-3.0.beta_py2:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "workspace/test_cdat-3.0.beta_py2_env"
      PYTHON_VERSION: "py2"
      ENV_NAME: "cdat-3.0.beta"
      RUN_TESTSUITE: "workspace/uvcdat/scripts/run_testsuite.py"
    steps:
      - run: echo "Linux - test install from cdat-3.0.beta_py2.Linux.yaml"
      - run: uname -a
      - run: *setup_env
      - run: *run_cdms_test
      - run: *run_genutil_test
      - run: *run_cdutil_test
      - run: *run_thermo_test
      - run: *run_wk_test

  linux_cdat-3.0.beta2_py3:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "workspace/test_cdat-3.0.beta2_py3_env"
      PYTHON_VERSION: "py3"
      ENV_NAME: "cdat-3.0.beta2"
      RUN_TESTSUITE: "workspace/uvcdat/scripts/run_testsuite.py"
    steps:
      - run: echo "Linux - test install from cdat-3.0.beta2_py3.Linux.yaml"
      - run: uname -a
      - run: *setup_env
      - run: *run_cdms_test
      - run: *run_genutil_test
      - run: *run_cdutil_test
      - run: *run_thermo_test
      - run: *run_wk_test

workflows:
  version: 2
  nightly:
    #triggers:
    #  - schedule:
    #      cron: "16 7 * * *"
    #      filters:
    #        branches:
    #          only: validateNightly
    jobs:
      #- macos_nightly_py2
      #- macos_nightly_py3:
      #    requires:
      #      - macos_nightly_py2
      - macos_cdat-3.0.beta-nox_py2
      #    requires:
      #      - macos_nightly_py3
      #- macos_cdat-3.0.beta2-nox_py3:
      #    requires:
      #      - macos_cdat-3.0.beta-nox_py2
      #- macos_cdat-3.0.beta_py2:
      #    requires:
      #      - macos_cdat-3.0.beta2-nox_py3
      #- macos_cdat-3.0.beta2_py3:
      #    requires:
      #      - macos_cdat-3.0.beta_py2     
      #- linux_nightly_py2
      #- linux_nightly_py3:
      #    requires:
      #      - linux_nightly_py2
      - linux_cdat-3.0.beta-nox_py2
          requires:
            - linux_nightly_py3
      #- linux_cdat-3.0.beta2-nox_py3:
      #    requires:
      #      - linux_cdat-3.0.beta-nox_py2
      #- linux_cdat-3.0.beta_py2:
      #    requires:
      #      - linux_cdat-3.0.beta2-nox_py3
      #- linux_cdat-3.0.beta2_py3:
      #    requires:
      #      - linux_cdat-3.0.beta_py2



