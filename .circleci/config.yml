version: 2

aliases:

  - &setup
    |
      echo "Install nightly..."
      mkdir -p workspace
      git clone -b validateNightly git@github.com:UV-CDAT/uvcdat workspace/uvcdat
      python workspace/uvcdat/scripts/install_nightly.py -w workspace/test_nightly -p $PYTHON_VERSION
      echo "Done installing nightly"
      ls workspace/test_nightly/miniconda/envs

  - &run_cdms_test
    name: run_cdms_test
    command: |
      python workspace/uvcdat/scripts/run_testsuite.py -w workspace/test_nightly -p $PYTHON_VERSION -t 'cdms'

  - &run_genutil_test
    name: run_genutil_test
    command: | 
      python workspace/uvcdat/scripts/run_testsuite.py -w workspace/test_nightly -p $PYTHON_VERSION -t 'genutil'

  - &run_cdutil_test
    name: run_cdutil_test
    command: | 
      python workspace/uvcdat/scripts/run_testsuite.py -w workspace/test_nightly -p $PYTHON_VERSION -t 'cdutil'

  - &run_vcs_test
    name: run_vcs_test
    command: | 
      python workspace/uvcdat/scripts/run_testsuite.py -w workspace/test_nightly -p $PYTHON_VERSION -t 'vcs'

  - &run_vcsaddons_test
    name: run_vcsaddons_test
    command: | 
      python workspace/uvcdat/scripts/run_testsuite.py -w workspace/test_nightly -p $PYTHON_VERSION -t 'vcsaddons'

  - &run_pcmdi_metrics_test
    name: run_pcmdi_metrics_test
    command: | 
      python workspace/uvcdat/scripts/run_testsuite.py -w workspace/test_nightly -p $PYTHON_VERSION -t 'pcmdi_metrics'

jobs:
  macos_nightly_py2:
    macos:
      xcode: "9.0"
    environment:
      - PYTHON_VERSION: 'py2'
    steps:
      - run: echo "..macos Nightly..."
      - run: uname -a

  macos_nightly_py3:
    macos:
      xcode: "9.0"
    environment:
      - PYTHON_VERSION: 'py3'
    steps:
      - run: echo "..macos Nightly..."
      - run: uname -a

  linux_nightly_py2:
    machine:
      image: circleci/classic:latest
    environment:
      - PYTHON_VERSION: 'py2'
    steps:
      - run: echo "...linux Nightly..."
      - run: uname -a

  linux_nightly_py3:
    machine:
      image: circleci/classic:latest
    environment:
      - PYTHON_VERSION: 'py3'
    steps:
      - run: echo "...linux Nightly..."
      - run: uname -a

workflows:
  version: 2
  nightly:
    triggers:
      - schedule:
          cron: "15 21 * * *"
          filters:
            branches:
              only: validateNightly
    jobs:
      - macos_nightly_py2
      - macos_nightly_py3:
          requires:
            - macos_nightly_py2
      - linux_nightly_py2
      - linux_nightly_py3:
          requires:
            - linux_nightly_py2
