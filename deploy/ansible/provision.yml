---
- hosts: all
  vars:
    build_root: /opt
    uvcdat_install_dir: /opt/uvcdat_install
    test_output_file: ~/out.nc
    test_input_files: /opt/uvcdat_install/share/uvcmetrics/test_data/cam_output/*.nc

  tasks:
    - name: Update apt cache
      apt: update_cache=yes
      sudo: yes

    - name: Install base packages
      apt: name={{ item }} state=present
      sudo: yes
      with_items:
        - git
        - gfortran
        - g++
        - libffi-dev
        - libsqlite3-dev
        - libssl-dev
        - libcurl3-openssl-dev
        - libbz2-dev
        - libexpat-dev
        - ncurses-dev
        - curl
        - make
        - wget
        - libjpeg-dev
        - libpng-dev
        - m4
        - cmake
        - automake
        - zlib1g-dev

    - name: Install GUI packages
      apt: name={{ item }} state=present
      sudo: yes
      with_items:
        - libxt-dev
        - qt-sdk
      when: "{{ gui|bool }}"

    - name: Clone UVCDAT source repo
      git:
          repo: git://github.com/UV-CDAT/uvcdat.git
          dest: "{{build_root}}/uvcdat"
          accept_hostkey: yes
          version: master
          force: yes
      sudo: yes

    - name: Point to "devel" branch of uvcmetrics subproject
      lineinfile:
          dest: "{{build_root}}/uvcdat/CMake/cdat_modules/uvcmetrics_pkg.cmake"
          state: present
          regexp: 'set\(UVCMETRICS_BRANCH'
          line: 'set(UVCMETRICS_BRANCH devel)'
      sudo: yes
      when: "{{ uvcmetrics|bool }}"

    - name: Create build directory if it does not exist
      file: path={{build_root}}/uvcdat-build state=directory mode=0775
      sudo: yes

    - name: Set UV-CDAT build options
      set_fact:
        cdat_opts:
          - "-DCDAT_BUILD_WEB=ON"
          - "-DCDAT_BUILD_GUI={{ 'ON' if gui else 'OFF' }}"
          - "-DCDAT_BUILD_OSMESA={{ 'OFF' if gui else 'ON' }}"
          - "-DCDAT_BUILD_OFFSCREEN={{ 'OFF' if gui else 'ON' }}"
          - "-DCDAT_DOWNLOAD_UVCMETRICS_TESTDATA={{ 'ON' if uvcmetrics else 'OFF' }}"

    - name: Configure UVCDAT
      command: cmake {{ cdat_opts|join(' ') }} -DCMAKE_INSTALL_PREFIX={{uvcdat_install_dir}} {{build_root}}/uvcdat chdir={{build_root}}/uvcdat-build
      sudo: yes

    - name: Build UVCDAT
      command: make -j{{ cpus|int + 1 }} chdir={{build_root}}/uvcdat-build
      sudo: yes

    - name: Disable UV-CDAT anonymous log
      lineinfile: dest=$HOME/.bashrc line="export UVCDAT_ANONYMOUS_LOG=no"
      sudo: no

    - name: Create script for running climatology2.py example
      template: src=run_climatology_example.sh.j2 dest={{uvcdat_install_dir}}/run_climatology_example.sh mode=0775
      sudo: yes
      when: "{{ uvcmetrics|bool }}"
