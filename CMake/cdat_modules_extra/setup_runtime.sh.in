# Everything beyond this point will be determined relatively
# from this path.
install_prefix="@CMAKE_INSTALL_PREFIX@"
# Reset previous uvcdat env messing up
. @CMAKE_INSTALL_PREFIX@/bin/reset_runtime.sh

# Saves what we will mess with
for v in PATH LD_LIBRARY_PATH DYLD_LIBRARY_PATH PYTHONPATH OPAL_PREFIX LIBOVERLAY_SCROLLBAR ; do
   tmp="${v}"
    if [ -n "${!tmp}" ] ; then
        export UVCDAT_ORIGINAL_${v}=${!v}
    else
        export UVCDAT_ORIGINAL_${v}=" "
    fi
done

function cleanup {
  unset cleanup install_prefix library_paths python_paths executable_paths
}

# Try to prevent the user from sourcing twice,
# which can lead to errors.
if [ -n "${UVCDAT_SETUP_PATH}" ] ; then
  if [ "${UVCDAT_SETUP_PATH}" = "${install_prefix}" ] ; then
    echo "Nothing to do since UVCDAT is already setup at: ${UVCDAT_SETUP_PATH}" 1>&2
    cleanup
    return 0
  else
    echo "ERROR: UVCDAT setup was previously sourced at: ${UVCDAT_SETUP_PATH}" 1>&2
    echo "ERROR: There is no need to run setup_runtime manually anymore." 1>&2
    echo "ERROR: Open a new shell in order to use a different install location." 1>&2
    echo "ERROR: Or execute source @CMAKE_INSTALL_PREFIX@/bin/reset_runtime.sh." 1>&2
    cleanup
    return 1
  fi
fi

# Check that the install prefix exists, otherwise stop.
if [ ! -d "${install_prefix}" ] ; then
  echo "ERROR: ${install_prefix} is not a directory." 1>&2
  cleanup
  return 1
fi

# cmake set variables
library_paths=( @SETUP_LIBRARY_PATHS@ )
python_paths=( @SETUP_PYTHON_PATHS@ )
executable_paths=( @SETUP_EXECUTABLE_PATHS@ )

export UVCDAT_PROMPT_STRING=@UVCDAT_PROMPT_STRING@
if [ "$UVCDAT_ENABLE_PROMPT_BEGINNING" ] ; then
    export UVCDAT_ORIGINAL_PS1=${PS1}" "
    export PS1="[@UVCDAT_PROMPT_STRING@]$PS1"

elif [ "$UVCDAT_ENABLE_PROMPT_END" ] ; then
    export UVCDAT_ORIGINAL_PS1=${PS1}" "
    export PS1="$PS1[@UVCDAT_PROMPT_STRING@]"
fi

if [ -d '@QT_LIB_DIR@' ] ; then
  LD_LIBRARY_PATH='@QT_LIB_DIR@:'"${LD_LIBRARY_PATH}"
fi

for d in "${library_paths[@]}" ; do
  f="${install_prefix}/${d}"
  if [ -d "${f}" ] ; then
    LD_LIBRARY_PATH="${f}:${LD_LIBRARY_PATH}"
  fi
done

if [ `uname` = 'Darwin' ] ; then
  LD_LIBRARY_PATH="/usr/X11R6/lib:${LD_LIBRARY_PATH}"
  export DYLD_FALLBACK_LIBRARY_PATH="${LD_LIBRARY_PATH}"
fi

for d in "${python_paths[@]}" ; do
  f="${install_prefix}/${d}"
  if [ -d "${f}" ] ; then
    PYTHONPATH="${f}:${PYTHONPATH}"
  fi
  unset f
done

for d in "${executable_paths[@]}" ; do
  f="${install_prefix}/${d}"
  if [ -d "${f}" ] ; then
    PATH="${f}:${PATH}"
  fi
  unset f
done

if [ -d "${install_prefix}/Externals/lib/R" ] ; then
  export R_HOME="${install_prefix}/Externals/lib/R"
fi

export OPAL_PREFIX="${install_prefix}/Externals"
export LIBOVERLAY_SCROLLBAR=0

export PATH
export LD_LIBRARY_PATH
export PYTHONPATH

export UVCDAT_SETUP_PATH="${install_prefix}"
cleanup
echo "Successfully updated your environment to use UVCDAT" 1>&2
echo "(changes are valid for this session/terminal only)" 1>&2
echo "Version: ${UVCDAT_PROMPT_STRING}" 1>&2
echo "Location: ${UVCDAT_SETUP_PATH}" 1>&2
echo "Reset these changes by running: source @CMAKE_INSTALL_PREFIX@/bin/reset_runtime.sh" 1>&2
return 0
