set(ENV{PATH} "@cdat_EXTERNALS@/bin:$ENV{PATH}")
set(ENV{@LIBRARY_PATH@} "@CMAKE_INSTALL_PREFIX@/lib:@cdat_EXTERNALS@/lib:@cdat_EXTERNALS@/lib/paraview-@PARAVIEW_MAJOR@.@PARAVIEW_MINOR@:$ENV{@LIBRARY_PATH@} @cdat_osx_ld_flags@")
if (NOT DEFINED SKIP_LDFLAGS)
 set(ENV{LDFLAGS} "-L@cdat_EXTERNALS@/lib @cdat_external_link_directories@ @cdat_rpath_flag@@CMAKE_INSTALL_PREFIX@/lib @cdat_rpath_flag@@cdat_EXTERNALS@/lib")
endif()
set(ENV{CFLAGS} "-I@cdat_EXTERNALS@/include @cdat_osx_flags@ @cdat_external_include_directories@ ${ADDITIONAL_CFLAGS}")
set(ENV{CPPFLAGS} "-I@cdat_EXTERNALS@/include @cdat_osx_cppflags@ @cdat_external_include_directories@ ${ADDITIONAL_CPPFLAGS}")
set(ENV{CXXFLAGS} "-I@cdat_EXTERNALS@/include @cdat_osx_cxxflags@ ${ADDITIONAL_CXXFLAGS}")
set(ENV{PKG_CONFIG_PATH} "@cdat_EXTERNALS@/lib/pkgconfig:/usr/lib64/pkgconfig:/usr/lib/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig:$ENV{PKG_CONFIG_PATH}")
set(ENV{PKG_CONFIG} "@cdat_PKG_CONFIG_EXECUTABLE@")
set(ENV{FC} "")
set(ENV{FCFLAGS} "")
set(ENV{FCLIBS} "")
set(ENV{F77} "")
set(ENV{FFLAGS} "")
set(ENV{FLIBS} "")
set(ENV{LD_X11} "") # for xgks
set(ENV{PYTHONPATH} @PYTHONPATH@)

if (DEFINED ENV{UVCDAT_ANONYMOUS_LOG})
  if (($ENV{UVCDAT_ANONYMOUS_LOG} STREQUAL "True") OR ($ENV{UVCDAT_ANONYMOUS_LOG} STREQUAL "False"))
    message("[INFO] Using UVCDAT_ANONYMOUS_LOG found in environment which is set to: '$ENV{UVCDAT_ANONYMOUS_LOG}'")
  else()
    message("[INFO] Found UVCDAT_ANONYMOUS_LOG in environment which is set to: '$ENV{UVCDAT_ANONYMOUS_LOG}'")
    message("[INFO] Valid values are 'True' or 'False' resetting to: 'True'")
    set(ENV{UVCDAT_ANONYMOUS_LOG} "True")
  endif()
else()
  set(ENV{UVCDAT_ANONYMOUS_LOG} "True")
endif()

if(APPLE)
  set(ENV{MAC_OSX_DEPLOYMENT_TARGET} "@CMAKE_OSX_DEPLOYMENT_TARGET@")
endif()

set(ENV{EXTERNALS} "@cdat_EXTERNALS@")

set(PYTHONUSERBASE @PYTHON_SITE_PACKAGES_PREFIX@)
#if ("@EGG_INSTALLER@" STREQUAL "PIP")
#    # Set python userbase so that pip install packages locally
#    set(PYTHONUSERBASE @CMAKE_INSTALL_PREFIX@)
#    set(EGG_CMD env @LIBRARY_PATH@=$ENV{@LIBRARY_PATH@} PYTHONUSERBASE=${PYTHONUSERBASE} @PIP_BINARY@ install --user -v --download-cache @CDAT_PACKAGE_CACHE_DIR@ )
#    if (NOT "${PIP_CERTIFICATE}" STREQUAL "")
#        set(EGG_CMD ${EGG_CMD} --cert=${PIP_CERTIFICATE})
#    endif()
#else()
#    set(EGG_CMD env @LD_LIBRARY_PATH@=$ENV{@LIBRARY_PATH@} @EASY_INSTALL_BINARY@ )
#endif()

